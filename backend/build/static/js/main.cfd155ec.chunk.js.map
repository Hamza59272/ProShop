{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productActions.js","screens/HomeScreen.js","components/Rating.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","style","backgroundColor","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","title","name","Item","onClick","isAdmin","Footer","Row","Col","Product","Card","_id","Img","src","image","Body","Title","as","Text","price","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","width","height","margin","display","Paginate","keyword","Pagination","Array","keys","key","active","Meta","description","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","HomeScreen","match","params","useEffect","sm","md","lg","xl","Rating","value","text","color","ProductScreen","history","useState","qty","setQty","setRating","setComment","successProductReview","Image","alt","fluid","ListGroup","countInStock","Form","Control","onChange","e","target","Button","push","disabled","addToCart","setItem","stringify","CartScreen","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","maxWidth","onSubmit","preventDefault","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cfd155ec.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload }\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LIST_RESET:\r\n      return { users: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {},\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('shippingAddress')\r\n  localStorage.removeItem('paymentMethod')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  document.location.href = '/login'\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\n\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar style={{backgroundColor:'green'}} variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Girl Power</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            \r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link >\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; Girl Power</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\n\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        \r\n\r\n        <Card.Text as='h3'>Rs. {product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Just a Second...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To Girl Power',\r\n  description: 'We sell the best Women dresses',\r\n  keywords: 'Women, Fashion, New Arrivals',\r\n}\r\n\r\nexport default Meta\r\n","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\n\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      \r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nexport default Rating\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                \r\n                <ListGroup.Item>Price: Rs. {product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>Rs. {product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          \r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <div style={{backgroundColor:'green' , color:'white', maxWidth:'180em' }}>\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{backgroundColor:'green' , color:'white', maxWidth:'180em' }}>\r\n    <FormContainer >\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      \r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n      \r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    })\r\n    localStorage.removeItem('cartItems')\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('COD')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='Visa/Master or COD'\r\n              id='COD'\r\n              name='paymentMethod'\r\n              value='COD'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping')\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment')\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n      dispatch({ type: USER_DETAILS_RESET })\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x Rs. {item.price} = Rs. {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>Rs. {cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>Rs. {cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>Rs. {cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>Rs. {cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x Rs. {item.price} = Rs. {item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>Rs. {order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>Rs. {order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>Rs. {order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>Rs. {order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>Rs. {product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route\r\n            path='/admin/productlist'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/admin/productlist/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={HomeScreen}\r\n            exact\r\n          />\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}